# Generated by Django 5.2.4 on 2025-07-05 14:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(help_text='اسم الموظف الكامل', max_length=100, verbose_name='الاسم الكامل')),
                ('job_title', models.CharField(help_text='المسمى الوظيفي للموظف', max_length=100, verbose_name='المسمى الوظيفي')),
                ('job_number', models.CharField(help_text='الرقم الوظيفي الفريد للموظف', max_length=20, unique=True, verbose_name='الرقم الوظيفي')),
                ('email', models.EmailField(help_text='البريد الإلكتروني الرسمي للموظف', max_length=254, unique=True, verbose_name='البريد الإلكتروني')),
                ('mobile_number', models.CharField(help_text='رقم الجوال للموظف', max_length=15, validators=[django.core.validators.RegexValidator(message='يجب أن يكون رقم الجوال بصيغة صحيحة (مثال: 0501234567 أو +966501234567)', regex='^\\+?966[0-9]{9}$|^05[0-9]{8}$')], verbose_name='رقم الجوال')),
                ('section', models.CharField(choices=[('hr', 'الموارد البشرية'), ('finance', 'المالية'), ('projects', 'المشاريع'), ('programs', 'البرامج'), ('it', 'تقنية المعلومات'), ('admin', 'الإدارة العامة'), ('field', 'العمل الميداني'), ('media', 'الإعلام والتسويق'), ('legal', 'الشؤون القانونية'), ('planning', 'التخطيط والمتابعة')], help_text='القسم الذي يعمل به الموظف', max_length=20, verbose_name='القسم')),
                ('hire_date', models.DateField(auto_now_add=True, verbose_name='تاريخ التوظيف')),
                ('is_active_employee', models.BooleanField(default=True, help_text='هل الموظف نشط حالياً', verbose_name='موظف نشط')),
                ('notes', models.TextField(blank=True, help_text='ملاحظات إضافية عن الموظف', verbose_name='ملاحظات')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'موظف',
                'verbose_name_plural': 'الموظفين',
                'ordering': ['name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
