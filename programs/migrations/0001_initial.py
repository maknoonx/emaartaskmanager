# Generated by Django 5.2.4 on 2025-07-08 07:40

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_number', models.PositiveIntegerField(help_text='رقم المنزل في البرنامج', verbose_name='رقم المنزل')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
            ],
            options={
                'verbose_name': 'منزل',
                'verbose_name_plural': 'المنازل',
                'ordering': ['house_number'],
            },
        ),
        migrations.CreateModel(
            name='HouseGeneralInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_name', models.CharField(max_length=200, verbose_name='اسم صاحب المنزل')),
                ('id_number', models.CharField(max_length=20, verbose_name='رقم الهوية')),
                ('number_of_residents', models.PositiveIntegerField(verbose_name='عدد الأفراد')),
                ('phone_number', models.CharField(max_length=20, verbose_name='رقم الجوال')),
                ('neighborhood', models.CharField(blank=True, max_length=200, verbose_name='الحي')),
                ('building_type', models.CharField(choices=[('popular', 'شعبي'), ('reinforced', 'مسلح')], max_length=20, verbose_name='نوع المبنى')),
                ('bedrooms', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)], verbose_name='عدد غرف النوم')),
                ('bathrooms', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)], verbose_name='عدد دورات المياه')),
                ('living_rooms', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)], verbose_name='عدد غرف المعيشة')),
                ('kitchens', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='عدد المطابخ')),
                ('majlis', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='عدد المجالس')),
                ('rooftops', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)], verbose_name='عدد الأسطح')),
                ('courtyards', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)], verbose_name='عدد الأحواش')),
                ('plot_area', models.DecimalField(decimal_places=2, help_text='بالمتر المربع', max_digits=10, verbose_name='مساحة القطعة')),
                ('house_area', models.DecimalField(decimal_places=2, help_text='بالمتر المربع', max_digits=10, verbose_name='مساحة المنزل')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('house', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='general_info', to='programs.house', verbose_name='المنزل')),
            ],
            options={
                'verbose_name': 'معلومات عامة للمنزل',
                'verbose_name_plural': 'معلومات عامة للمنازل',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='اسم البرنامج', max_length=200, verbose_name='اسم البرنامج')),
                ('description', models.TextField(blank=True, help_text='وصف تفصيلي للبرنامج', verbose_name='وصف البرنامج')),
                ('number_of_houses', models.PositiveIntegerField(help_text='عدد المنازل في البرنامج', validators=[django.core.validators.MinValueValidator(1)], verbose_name='عدد المنازل')),
                ('address', models.TextField(help_text='عنوان البرنامج', verbose_name='العنوان')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_programs', to=settings.AUTH_USER_MODEL, verbose_name='منشئ البرنامج')),
            ],
            options={
                'verbose_name': 'برنامج',
                'verbose_name_plural': 'البرامج',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='house',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='houses', to='programs.program', verbose_name='البرنامج'),
        ),
        migrations.AlterUniqueTogether(
            name='house',
            unique_together={('program', 'house_number')},
        ),
        migrations.CreateModel(
            name='RoomDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type', models.CharField(choices=[('bedroom', 'غرفة نوم'), ('bathroom', 'دورة مياه'), ('living_room', 'غرفة معيشة'), ('kitchen', 'مطبخ'), ('majlis', 'مجلس'), ('rooftop', 'سطح'), ('courtyard', 'حوش')], max_length=20, verbose_name='نوع الغرفة')),
                ('room_number', models.PositiveIntegerField(help_text='رقم الغرفة من نفس النوع', verbose_name='رقم الغرفة')),
                ('area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='المساحة م²')),
                ('people_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='كم شخص فيها')),
                ('furniture_condition', models.CharField(blank=True, choices=[('excellent', 'ممتاز'), ('needs_change', 'تغيير')], max_length=20, null=True, verbose_name='حالة الأثاث')),
                ('windows_count', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='عدد الشبابيك')),
                ('doors_count', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='عدد الأبواب')),
                ('windows_condition', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('maintenance', 'صيانة'), ('needs_change', 'تغيير'), ('none', 'لا يوجد')], max_length=20, null=True, verbose_name='حالة الشبابيك')),
                ('doors_condition', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('maintenance', 'صيانة'), ('needs_change', 'تغيير')], max_length=20, null=True, verbose_name='حالة الأبواب')),
                ('ceiling_type', models.CharField(blank=True, choices=[('wood', 'خشب'), ('zinc', 'زنك'), ('reinforced', 'مسلح'), ('mixed', 'منوع'), ('open', 'مفتوح')], max_length=20, null=True, verbose_name='نوع السقف')),
                ('ceiling_condition', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('maintenance', 'صيانة'), ('needs_change', 'تغيير')], max_length=20, null=True, verbose_name='حالة الأسقف')),
                ('insulation_condition', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('needs_insulation', 'يحتاج عزل')], max_length=20, null=True, verbose_name='حالة العزل')),
                ('gypsum_condition', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('maintenance', 'صيانة'), ('iron', 'حديد')], max_length=20, null=True, verbose_name='حالة الجبس')),
                ('paint_condition', models.CharField(blank=True, choices=[('excellent', 'ممتاز'), ('maintenance', 'صيانة'), ('treatment', 'معالجة')], max_length=20, null=True, verbose_name='حالة الدهان')),
                ('wall_condition', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('maintenance', 'صيانة'), ('treatment', 'معالجة')], max_length=20, null=True, verbose_name='حالة الجدران')),
                ('floor_type', models.CharField(blank=True, choices=[('concrete', 'صبة'), ('tiles', 'بلاط')], max_length=20, null=True, verbose_name='نوع الأرضيات')),
                ('floor_condition', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('maintenance', 'صيانة'), ('needs_change', 'تغيير')], max_length=20, null=True, verbose_name='حالة الأرضيات')),
                ('level_condition', models.CharField(blank=True, choices=[('normal', 'عادية'), ('medium', 'متوسطة'), ('large', 'كبيرة')], max_length=20, null=True, verbose_name='حالة المناسيب')),
                ('structural_problems', models.JSONField(blank=True, default=list, help_text='رطوبة، كراك عادي، كراك متوسط، كراك خطير، لا يوجد كراك', verbose_name='مشاكل إنشائية')),
                ('ac_count', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='عدد المكيفات')),
                ('ac_type', models.CharField(blank=True, choices=[('split', 'سبلت'), ('window', 'شباك')], max_length=20, null=True, verbose_name='نوع التكييف')),
                ('ac_condition', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('maintenance', 'صيانة'), ('needs_change', 'تغيير')], max_length=20, null=True, verbose_name='حالة التكييف')),
                ('electrical_voltage', models.CharField(blank=True, choices=[('excellent', 'ممتاز'), ('needs_conversion', 'يجب التحويل')], max_length=20, null=True, verbose_name='حالة الجهد الكهربائي')),
                ('electrical_extensions', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('external', 'خارجي'), ('partial', 'جزئي')], max_length=20, null=True, verbose_name='التمديدات الكهربائية')),
                ('electrical_finishing', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('maintenance', 'صيانة'), ('needs_change', 'تغيير')], max_length=20, null=True, verbose_name='التشطيبات الكهربائية')),
                ('plumbing_extensions', models.CharField(blank=True, choices=[('internal', 'داخلي'), ('external', 'خارجي'), ('partial', 'جزئي')], max_length=20, null=True, verbose_name='تمديد المواسير')),
                ('plumbing_finishing', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('maintenance', 'صيانة'), ('needs_change', 'تغيير')], max_length=20, null=True, verbose_name='حالة التشطيب')),
                ('bathroom_shortage', models.CharField(blank=True, choices=[('yes', 'نعم'), ('no', 'لا')], max_length=5, null=True, verbose_name='هل يوجد قصور في دورات المياه')),
                ('heater_condition', models.CharField(blank=True, choices=[('excellent', 'ممتاز'), ('maintenance', 'صيانة'), ('needs_change', 'تغيير')], max_length=20, null=True, verbose_name='حالة السخان')),
                ('extractor_condition', models.CharField(blank=True, choices=[('exists', 'يوجد'), ('none', 'لا يوجد'), ('needs_central', 'بحاجة لمركزي')], max_length=20, null=True, verbose_name='حالة الشفاط')),
                ('can_add_bathroom', models.CharField(blank=True, choices=[('yes', 'نعم'), ('no', 'لا')], max_length=5, null=True, verbose_name='هل يمكن إضافة دورات مياه')),
                ('ground_tank', models.CharField(blank=True, choices=[('yes', 'نعم'), ('no', 'لا'), ('external', 'خارجي')], max_length=20, null=True, verbose_name='هل يوجد خزان أرضي')),
                ('overhead_tank', models.CharField(blank=True, choices=[('yes', 'نعم'), ('no', 'لا')], max_length=5, null=True, verbose_name='هل يوجد خزان علوي')),
                ('ground_tank_condition', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('maintenance', 'صيانة'), ('needs_change', 'تغيير')], max_length=20, null=True, verbose_name='حالة الخزان الأرضي')),
                ('overhead_tank_condition', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('maintenance', 'صيانة'), ('needs_change', 'تغيير')], max_length=20, null=True, verbose_name='حالة الخزان العلوي')),
                ('tank_accessories_condition', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('maintenance', 'صيانة'), ('needs_change', 'تغيير')], max_length=20, null=True, verbose_name='حالة مرافق الخزان')),
                ('appliances_condition', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('maintenance', 'صيانة'), ('needs_change', 'تغيير')], max_length=20, null=True, verbose_name='الأجهزة الكهربائية')),
                ('kitchen_condition', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('maintenance', 'صيانة'), ('new', 'جديد')], max_length=20, null=True, verbose_name='حالة المطبخ')),
                ('courtyard_floor_type', models.CharField(blank=True, choices=[('concrete', 'صبة'), ('flooring', 'أرضيات'), ('gravel', 'بحص')], max_length=20, null=True, verbose_name='نوع الأرضيات')),
                ('courtyard_floor_condition', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('maintenance', 'صيانة'), ('needs_change', 'تغيير')], max_length=20, null=True, verbose_name='حالة الأرضيات')),
                ('courtyard_wall_condition', models.CharField(blank=True, choices=[('excellent', 'ممتازة'), ('needs_change', 'تغيير'), ('humidity', 'رطوبة')], max_length=20, null=True, verbose_name='حالة الجدران')),
                ('exterior_paint', models.CharField(blank=True, choices=[('excellent', 'ممتاز'), ('treated', 'معالج'), ('iron', 'حديد')], max_length=20, null=True, verbose_name='الدهان الخارجي')),
                ('courtyard_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='مساحة الحوش')),
                ('rooftop_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='مساحة السطح')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_details', to='programs.house', verbose_name='المنزل')),
            ],
            options={
                'verbose_name': 'تفاصيل الغرفة',
                'verbose_name_plural': 'تفاصيل الغرف',
                'ordering': ['room_type', 'room_number'],
                'unique_together': {('house', 'room_type', 'room_number')},
            },
        ),
    ]
